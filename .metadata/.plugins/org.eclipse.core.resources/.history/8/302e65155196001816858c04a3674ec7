package threads;

import app.*;
import dbTools.DBOperationsProductRequest;
import entities.*;

public class RequestProductThread extends Thread
{
	private static final int SLEEP_BETWEEN_CHECKS = 1000;

	private ProductRequest productRequest;
	private AppContext context;

	public RequestProductThread( ProductRequest productRequest, AppContext context )
	{
		super();

		this.productRequest = productRequest;
		this.context = context;
	}

	public void run( )
	{
		boolean finished = false;

		ProductRequest pr = null;
		
		while (!finished)
		{
			pr = DBOperationsProductRequest.getProductRequest(context, productRequest.getId());
			if (pr.getStatus() == ProductRequest.ALLOCATED) 
			{
				productRequest.setStatus(pr.getStatus());
				productRequest.setQuantityAllocated(pr.getQuantityAllocated());
				
				finished = true;
			}
			else
			{
				try
				{
					sleep(SLEEP_BETWEEN_CHECKS);
				}
				catch (InterruptedException e)
				{
					e.printStackTrace();
				}
			}
		}
	}
}
