package frames.models;

import frames.models.comparator.ComparatorForCartProducts;
import frames.tools.GenericComparator;
import frames.tools.GenericModel;

import java.util.List;

import dbTools.DBOperationsProduct;
import entities.*;;

public class CartProductsModel extends GenericModel<CartProducts>
{
	private static final long serialVersionUID = 1L;
	private List<Product> products;
	private AppContext context;
	public CartProductsModel(AppContext context )
	{
		super();
		this.context=context;
		products=DBOperationsProduct.listProducts(context, list, null, 0);
	}
	
	@Override
	public int getColumnCount( )
	{

		return 3;
	}

	@Override
	public Object getValueAt( int rowIndex, int columnIndex )
	{
		Object result = null;

		if (list != null)
		{
			if ((0 <= rowIndex) && (rowIndex < list.size()))
			{
				CartProducts cartProd = list.get(rowIndex);

				if (cartProd != null)
				{
					switch (columnIndex)
					{
						case 0:
							result = cartProd.getId_product();
							break;
						case 1:
							result = cartProd.getQuantity();
							break;
						case 2:
							result = cartProd.getEntry_DataTime();
							break;

					}
				}
			}
		}

		return result;
	}

	@Override
	protected GenericComparator<CartProducts> createComparator( )
	{

		return new ComparatorForCartProducts();
	}

	@Override
	public String getColumnName( int columnIndex )
	{
		String result = null;

		if ((0 <= columnIndex) && (columnIndex < getColumnCount()))
		{
			switch (columnIndex)
			{
				case 0:
					result = "Product";
					break;
				case 1:
					result = "Quantity";
					break;
				case 2:
					result = "Entry time";
					break;

			}
		}
		return result;
	}

}
